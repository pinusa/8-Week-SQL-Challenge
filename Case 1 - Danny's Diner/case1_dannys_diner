-- 1. What is the total amount each customer spent at the restaurant?
select
    s.customer_id,
    case
when customer_id = 'A' then sum(price)
when customer_id = 'B' then sum(price)
when customer_id = 'C' then sum(price)
else null end as total_spend
from dannys_diner.sales s
    join dannys_diner.menu m
    on s.product_id = m.product_id
group by s.customer_id

-- 2. How many days has each customer visited the restaurant?
select
    s.customer_id,
    count(order_date) as visit_days
from dannys_diner.sales s
    join dannys_diner.menu m
    on s.product_id = m.product_id
group by s.customer_id
order by s.customer_id

-- 3. What was the first item from the menu purchased by each customer?
with
    first_order
    as
    (
        select
            *,
            dense_rank() over(partition by s.customer_id order by s.order_date) as rank
        from dannys_diner.sales s
            join dannys_diner.menu m
            on s.product_id = m.product_id
    )

select
    customer_id,
    product_name
from first_order
where rank = 1;

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
select
    m.product_name,
    count(s.product_id) as buy_count
from dannys_diner.sales s
    join dannys_diner.menu m
    on s.product_id = m.product_id
group by m.product_name
order by buy_count desc
limit 1;

-- 5. Which item was the most popular for each customer?
with buy_count
as
(
  select
    s.customer_id,
    m.product_name,
    case 
  when m.product_name = 'sushi' then count(m.product_name)
  when m.product_name = 'ramen' then count(m.product_name)
  when m.product_name = 'curry' then count(m.product_name)
  else null end as food_count,
    dense_rank() over(partition by s.customer_id order by count(m.product_name) desc) as rank
from dannys_diner.sales s
    join dannys_diner.menu m
    on s.product_id = m.product_id
group by s.customer_id, m.product_name
)

select customer_id, product_name, food_count
from buy_count
where rank = 1

-- 6. Which item was purchased first by the customer after they became a member?
with
    post_membership
    as
    (
        select
            s.customer_id,
            mem.join_date,
            s.order_date,
            s.product_id,
            dense_rank() over(partition by mem.customer_id order by order_date) as rank
        from dannys_diner.sales s
            join dannys_diner.members mem
            on s.customer_id = mem.customer_id
        where mem.join_date <= s.order_date
        order by customer_id, rank
    )

select
    customer_id, join_date, order_date, product_name
from post_membership p
    join dannys_diner.menu m
    on m.product_id = p.product_id
where rank = 1

-- 7. Which item was purchased just before the customer became a member?
with
    pre_membership
    as
    (
        select
            s.customer_id,
            s.order_date,
            mem.join_date,
            s.product_id,
            dense_rank() over(partition by s.customer_id order by s.order_date) as rank
        from dannys_diner.sales s
            join dannys_diner.members mem
            on s.customer_id = mem.customer_id
        where mem.join_date > s.order_date
    )

select customer_id, order_date, join_date, product_name
from pre_membership p
    join dannys_diner.menu m
    on p.product_id = m.product_id
where rank = 1
order by customer_id

-- 8. What is the total items and amount spent for each member before they became a member?
select
    s.customer_id,
    count(distinct s.product_id) as distinct_item,
    sum(m.price) as total_sales
from dannys_diner.sales s
    join dannys_diner.members as mem
    on s.customer_id = mem.customer_id
    join dannys_diner.menu m
    on s.product_id = m.product_id
where s.order_date < mem.join_date
group by s.customer_id;

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
with
    price_points
    as
    (
        select *,
            case
when m.product_name = 'sushi' then price*20
else price*10
end as points
        from dannys_diner.menu m
    )

select
    s.customer_id,
    sum(p.points) as total_points
from price_points p
    join dannys_diner.sales s
    on p.product_id = s.product_id
group by s.customer_id